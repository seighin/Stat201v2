hp.freq.table
t$Freq
t[1]
t[1:5]
str(t[])
hp.freq.table <- data.frame(hp=levels(hp.cls), freq=hp.tab[])
hp.freq.table
hp.ft <- data.frame(freq=hp.tab[])
hp.ft
cumsum(hp.ft$freq)
hp.ft$freq/sum(hp.ft$freq)
?hist
knitr::opts_chunk$set(echo = TRUE, fig.width=5, fig.height = 3.5)
# These functions will be discussed in later chapters
x.values <- seq(min(mtcars$mpg), max(mtcars$mpg), 100)
norm.values <- dnorm(x.values, mean(mtcars$mpg), sd(mtcars$mpg))
hist(mtcars$mpg, breaks = 10, probability = TRUE, main = "My Histogram",
xlab = "MPG", col = "red")
points(x.values, norm.values)
norm.values
x.values
?seq
?lines
plot(mtcars$mpg)
plot(as.factor*mtcars$cyl)
plot(as.factor(mtcars$cyl))
?dotplot
dotchart(mtcars$mpg)
stripchart(mtcars$mpg)
stripchart(mtcars$mog)
stripchart(mtcars$mpg, methos="stack")
stripchart(mtcars$mpg, method="stack")
?stripchart
stripchart(mtcars$mpg, method="stack", at=.15)
stripchart(mtcars$mpg, method="stack", at=.15, pch=19)
stripchart(mtcars$mpg, method="stack", at=.15, pch=19, offset=.5)
stripchart(mtcars$mpg, method="stack", at=.15, pch=19, offset=.7)
stripchart(mtcars$hp, method="stack", at=.15, pch=19, offset=.7)
str(mtcars)
stripchart(mtcars$wt, method="stack", at=.15, pch=19, offset=.7)
?pbinom
choose(100,53) * .5^53 * .5^47
choose(1000,523) * .5^523 * .5^477
choose(1000,46) * .5^46 * .5^954
install.packages("VennDiagram")
library(VennDiagram)
?VennDiagram
?draw.pairwise.venn
draw.pairwise.venn(20,20,0)
?grid.draw
draw.pairwise.venn(20,20,0)
??bern
?Random
-.3
ceiling(-.3)
?ruinf
?runif
bern <- ceiling(runif(10) - 0.5)
bern
?RNGkind
pbinom(2, 10, .1)
pbinom(1, 10, .1)
pbinom(2, 10, .1, lower=F)
?pbinom
pbinom(0, 10, .1)
pbinom(1, 10, .1)
?set.seed
?random
??Random
?RNGkind
runif()
runif(1)
??clock
?Sys.time
Sys.time()
as.integer(Sys.time())
p.test <- prop.test(125, 300, correct=FALSE )
str(p.test)
?prop.test
prop.test(10,30, p=0, correct=F)
prop.test(10,30, p=0.00001, correct=F)
knitr::opts_chunk$set(echo = TRUE)
# What is the p-value?
p.test.results$p.value
knitr::opts_chunk$set(echo = TRUE)
prop.test(125, 300, correct=FALSE )
prop.test(125, 300, p=0.35, alt='greater', correct=FALSE)   # Don't forget the correction
p.test.results <- prop.test(125, 300, p=0.35, alt='greater', correct=FALSE)
p.test.results
str(p.test.results)
# What is the p-value?
p.test.results$p.value
# What is the test statistic?
p.test.results$statistic
# The z statistic is the square root of the chi-squared value
z <- sqrt(p.test.results$statistic)
z
names(z) <- "Z"
z
p.test.results <- binom.test(125, 300, p=0.35, alt='greater', correct=FALSE)
p.test.results <- binom.test(125, 300, p=0.35, alt='greater')
p.test.results
prop.test(x(125, 200), n(300, 400))
prop.test(x=c(125, 200), n=c(300, 400))
str(p.test.results)
p.test.results <- prop.test(125, 300, p=0.35, alt='greater', correct=FALSE)
str(p.test.results)
sqrt(3.1708)
prop.test(c(125,142), c(300,290), 0=.1correct=FALSE)
prop.test(c(125,142), c(300,290), 0=.1, correct=FALSE)
prop.test(c(125,142), c(300,290), p=.1, correct=FALSE)
prop.test(c(125,142), c(300,290), p=c(.1, .2), correct=FALSE)
? t.test
mtcars
table(mtcars$vs)
prop.test(table(mtcars$am))
prop.test(18, 32, correct=FALSE)
prop.test(table(mtcars$am), correct=F)
table(mtcars$am)
prop.test(19, 32, correct=FALSE)
prop.test(table(mtcars$am), correct=F)
?mtcars
table(mtcars$am==1)
prop.test(table(mtcars$am==1), correct=F)
prop.test(table(1-mtcars$am), correct=F)
?t.test
mtcars
?pt
datasets
?datasets
?datasets
library(help='datasets')
Orange
OrchardSprays
VADeaths
LakeHuron
faithful
?faithful
plot(faithful$eruptions, faithful$waiting)
women
trees
stackloss
presidents
precip
occupationalStatus
nottem
lynx
lh
iris
chickwts
Loblolly
crimtab
presidents
?presidents
plot(presidents, las = 1, ylab = "Approval rating (%)",
main = "presidents data")
t.test(presidents$Qtr1)
str(presidents)
uspop
str(nottem)
str(JohnsonJohnson)
str(UCBAdmissions)
ToothGrowth
?ToothGrowth
ability.cov
airquality
cars
beaver1
immer
library(MASS)
immer
?immer
immer$Y1 - immer$Y2
mean(immer$Y1 - immer$Y2)
cor(faithful)
cor.test(faithful)
cor.test(faithful$eruptions, faithful)
cor.test(faithful$eruptions, faithful$waiting)
?cor.test
?cor
plot(faithful)
?faithful
write.csv(faithful, '~/Dropbox/Classes - Prof/Stat 201/2017 Fall/Data/faithful.csv', row.names = FALSE)
?cor
?cor.test
?faithful
?plot
knitr::opts_chunk$set(echo = TRUE)
# Correlation coefficient of eruption and waiting times
cor(faithful$eruptions, faithful$waiting)
# Correlation matrix
cor(faithful)
# Generate random value vectors
x <- runif(20, 1, 10)
y <- runif(20, 3, 8)
cor(x,y)
# Is populaiton correlation zero?
cor.test(faithful$eruptions, faithful$waiting)
# Linear model with x and y (previously defined)
xy.lm <- lm(y ~ x)
# "Predict" waiting times by eruption length
faith.lm <- lm(faithful$waiting ~ faithful$eruptions)
# This is functionally identical to above, but is aesthetically cleaner
faith.lm2 <- lm(waiting ~ eruptions, data=faithful)
faith.lm
summary(faith.lm)
# Draw scatterplot
plot(faithful$eruptions, faithful$waiting,
main='Scatterplot with regression line')
# Add regression line in red
abline(faith.lm, col="red")
?predict
?predict.lm
predict(faith.lm, data.frame(eruptions=c(12)))
new <- data.frame(eruptions=c(12))
new
predict(faith.lm, new)
predict(faith.lm2, new)
faithful$eruptions
?predict.lm
?chisq.test
?warpbreaks
warpbreaks
table(warpbreaks$breaks, warpbreaks$tension)
?table
Titanic
?tapply
tapply(Titanic, 3, sum)
?apply
apply(Titanic,3, sum)
apply(Titanic,c(3,4), sum)
?sapply
?WorldPhones
WorldPhones
chisq.test(WorldPhones)
AirPassengers
BJsales
HairEyeColor
LifeCycleSavings
USAccDeaths
str(USAccDeaths)
discoveries
chisq.test(discoveries)
eurodist
table(mtcars$cyl)
chisq.test(table(mtcars$cyl))
chisq.test(table(mtcars$cyl), correct=FALSE)
chisq.test(table(mtcars$cyl), c(2,1,1) correct=FALSE)
chisq.test(table(mtcars$cyl), c(2,1,1), correct=FALSE)
chisq.test(table(mtcars$cyl), c(.5,.25,.25), correct=FALSE)
chisq.test(table(mtcars$cyl), c(.5,.25,.25)*32, correct=FALSE)
chisq.test(table(mtcars$cyl),p= c(.5,.25,.25)*32, correct=FALSE)
chisq.test(table(mtcars$cyl),p= c(.5,.25,.25), correct=FALSE)
str(Titanic)
abs(floor(runif(100)*7 - 1))
abs(floor(runif(100)*7 - 1)) +1
dice<-abs(floor(runif(100)*7 - 1)) +1
table(dice)
cyl.table <- table(mtcars$cyl)
cyl.table
cor.test(cyl.table)
str(cyl.table)
cor.test(cyl.table[1])
cor.test(cyl.table[[1]])
c(cyl.table[1])
c(cyl.table[[1])
c(cyl.table[[1]])
c(cyl.table[[1,]])
c(cyl.table)
cor.test(c(cyl.table)
)
str(c(cyl.table))
cyl.vec <- c(cyl.table)
cor.test(cyl.vec)
cor.test(cyl.vec[1:3])
cor.test(c(11,7,14))
chisq.test(cyl.table)
chisq.test(Titanic)
source('~/Dropbox/Classes - Prof/Stat 201/2017 Fall/Data/ch02_data.R')
temp
air <- read.csv('../../Resources/Data/airpollution data.csv')
air
str(air)
hist(air$Avg.Fine.Particulate.Matter)
air.sam <- sample(air, 30)
air
air.sam <- sample(air, 30)
length(air)
str(air)
air.sam <- sample(air$Avg.Fine.Particulate.Matter, 30)
air.sam
hist air.sam
hist(air.sam)
air.sam <- sample(air$Avg.Fine.Particulate.Matter, 30)
hist(air.sam)
air.sam <- sample(air$Avg.Fine.Particulate.Matter, 30)
hist(air.sam)
air.sam
max(air$date)
max(as.character( air$date))
substr(air$date,7)
substr(as.character( air$date),7)
substr(as.character( air$date),1,7)
source('~/Dropbox/Classes - Prof/Stat 201/2017 Fall/Data/ch02_data.R')
ap.sub
hist(ap.sub)
source('~/Dropbox/Classes - Prof/Stat 201/2017 Fall/Data/ch02_data.R')
hist(ap.sub)
source('~/Dropbox/Classes - Prof/Stat 201/2017 Fall/Data/ch02_data.R')
hist(ap.sub)
source('~/Dropbox/Classes - Prof/Stat 201/2017 Fall/Data/ch02_data.R')
hist(ap.sub)
rownames(ap.sub)
str(ap.sub)
source('~/Dropbox/Classes - Prof/Stat 201/2017 Fall/Data/ch02_data.R')
ap.save$max.fpm
source('~/Dropbox/Classes - Prof/Stat 201/2017 Fall/Data/ch02_data.R')
source('~/Dropbox/Classes - Prof/Stat 201/2017 Fall/Data/ch02_data.R')
ap.save
ap.save$max.fpm
HairEyeColor
?HairEyeColor
apply(HairEyeColor, 2, sum)
x <- c(rep("Brown",220), rep("Blue",215), rep("Hazel",93), rep("Green", 64)))
x <- c(rep("Brown",220), rep("Blue",215), rep("Hazel",93), rep("Green", 64))
x
y <- sample(x, length(x))
y
summary(y)
plot(y)
barplot(y)
table(y)
library(epitools)
hair_eye <- expand.table(HairEyeColor)
hair_eye
source('~/Dropbox/Classes - Prof/Stat 201/2017 Fall/Data/ch02_data.R')
he.rand
length(he.exp)
str(he.exp)
rows(he.exp)
count(he.exp)
nrow(he.exp)
source('~/Dropbox/Classes - Prof/Stat 201/2017 Fall/Data/ch02_data.R')
he.rand
source('~/Dropbox/Classes - Prof/Stat 201/2017 Fall/Data/ch02_data.R')
he <- read.csv('hair_eye.csv')
he
source('~/Dropbox/Classes - Prof/Stat 201/2017 Fall/Data/ch02_data.R')
?matrix
?chisq.test
str(Titanic)
table(he$Hair, he$Eye)
source('~/Dropbox/Classes - Prof/Stat 201/Materials/Slides/My Slides/images/ch03_plots.R')
?boxplot
source('~/Dropbox/Classes - Prof/Stat 201/Materials/Slides/My Slides/images/ch03_plots.R')
source('~/Dropbox/Classes - Prof/Stat 201/Materials/Slides/My Slides/images/ch03_plots.R')
source('~/Dropbox/Classes - Prof/Stat 201/Materials/Slides/My Slides/images/ch03_plots.R')
?par
source('~/Dropbox/Classes - Prof/Stat 201/Materials/Slides/My Slides/images/ch03_plots.R')
source('~/Dropbox/Classes - Prof/Stat 201/Materials/Slides/My Slides/images/ch03_plots.R')
source('~/Dropbox/Classes - Prof/Stat 201/Materials/Slides/My Slides/images/ch03_plots.R')
source('~/Dropbox/Classes - Prof/Stat 201/Materials/Slides/My Slides/images/ch03_plots.R')
source('~/Dropbox/Classes - Prof/Stat 201/Materials/Slides/My Slides/images/ch03_plots.R')
par(mar=mar.old)
dev.off()
source('~/Dropbox/Classes - Prof/Stat 201/Materials/Slides/My Slides/images/ch03_plots.R')
source('~/Dropbox/Classes - Prof/Stat 201/Materials/Slides/My Slides/images/ch03_plots.R')
source('~/Dropbox/Classes - Prof/Stat 201/Materials/Slides/My Slides/images/ch03_plots.R')
source('~/Dropbox/Classes - Prof/Stat 201/Materials/Slides/My Slides/images/ch03_plots.R')
source('~/Dropbox/Classes - Prof/Stat 201/Materials/Slides/My Slides/images/ch03_plots.R')
png('ch03_boxplot.png',
width=300, height=200)
x.1 <- rnorm(1000, 0, 1)
x.2 <- rnorm(1000, 0, 3)
mean(x.1)
mean(x.2)
var(x.1)
var(x.2)
set.seed(42)
set.seed(42)
x.1 <- rnorm(1000, 0, 1)
x.2 <- rnorm(1000, 0, 3)
mean(x.1)
mean(x.2)
var(x.1)
var(x.2)
x.var <- data.frame(x=c(x.1, x.2), lab=c(rep("SD = 1",1000), rep("SD = 3")))
g.var <- ggplot(x.var, aes(x=x))
g.var <- g.var + geom_histogram()
g.var <- g.var + facet_grid(.~lab)
g
x.var <- data.frame(x=c(x.1, x.2), lab=c(rep("SD = 1",1000), rep("SD = 3",1000)))
g.var <- ggplot(x.var, aes(x=x))
g.var <- g.var + geom_histogram()
g.var <- g.var + facet_grid(.~lab)
g.var
g.var
g.var <- ggplot(x.var, aes(x=x))
g.var <- g.var + geom_histogram()
g.var <- g.var
g.var
?geom_histogram
x.var
hist(x.var$x)
require(ggplot2)
# Set working dir to script dir
setwd(dirname(sys.frame(1)$ofile))
# Boxplot of age data
age <- c(22, 32, 46, 50, 33, 38, 20, 24)
png('ch03_boxplot.png',
width=300, height=200)
mar.old <-par(mar = c(3,1,1,1) + 0.1)
boxplot(age, horizontal = TRUE, col="cadetblue")
par(mar=mar.old)
dev.off()
# Var comparison
set.seed(42)
x.1 <- rnorm(1000, 0, 1)
x.2 <- rnorm(1000, 0, 3)
mean(x.1)
mean(x.2)
var(x.1)
var(x.2)
x.var <- data.frame(x=c(x.1, x.2), lab=c(rep("SD = 1",1000), rep("SD = 3",1000)))
g.var <- ggplot(x.var, aes(x=x))
g.var <- g.var + geom_histogram()
g.var <- g.var
g.var
g.var
hist(x.var$x)
dev.off()
hist(x.var$x)
g.var
g.var <- ggplot(x.var, aes(x=x))
g.var <- g.var + geom_histogram()
g.var <- g.var + facet_grid(. ~ lab)
g.var
g.var <- ggplot(x.var, aes(x=x))
g.var <- g.var + geom_histogram()
g.var <- g.var + facet_grid(lab ~ .)
g.var
set.seed(420)
x.1 <- rnorm(1000, 0, 1)
x.2 <- rnorm(1000, 0, 3)
mean(x.1)
mean(x.2)
var(x.1)
var(x.2)
x.var <- data.frame(x=c(x.1, x.2), lab=c(rep("SD = 1",1000), rep("SD = 3",1000)))
g.var <- ggplot(x.var, aes(x=x))
g.var <- g.var + geom_histogram()
g.var <- g.var + facet_grid(lab ~ .)
g.var
?geom_histogram
set.seed(23)
x.1 <- rnorm(1000, 0, 1)
x.2 <- rnorm(1000, 0, 3)
mean(x.1)
mean(x.2)
var(x.1)
var(x.2)
x.var <- data.frame(x=c(x.1, x.2), lab=c(rep("SD = 1",1000), rep("SD = 3",1000)))
g.var <- ggplot(x.var, aes(x=x, y=..density..))
g.var <- g.var + geom_histogram()
g.var <- g.var + facet_grid(lab ~ .)
g.var
set.seed(23)
x.1 <- rnorm(2000, 0, 1)
x.2 <- rnorm(2000, 0, 3)
mean(x.1)
mean(x.2)
var(x.1)
var(x.2)
x.var <- data.frame(x=c(x.1, x.2), lab=c(rep("SD = 1",2000), rep("SD = 3",2000)))
g.var <- ggplot(x.var, aes(x=x, y=..density..))
g.var <- g.var + geom_histogram()
g.var <- g.var + facet_grid(lab ~ .)
g.var
# Var comparison
set.seed(23)
x.1 <- rnorm(2000, 0, 1)
x.2 <- rnorm(2000, 0, 3)
mean(x.1)
mean(x.2)
var(x.1)
var(x.2)
x.var <- data.frame(x=c(x.1, x.2), lab=c(rep("SD = 1",2000), rep("SD = 3",2000)))
g.var <- ggplot(x.var, aes(x=x, y=..density..))
g.var <- g.var + geom_histogram(color="black", fill="cadetblue")
g.var <- g.var + facet_grid(lab ~ .)
g.var
# Var comparison
set.seed(42)
x.1 <- rnorm(2000, 0, 1)
x.2 <- rnorm(2000, 0, 3)
mean(x.1)
mean(x.2)
var(x.1)
var(x.2)
x.var <- data.frame(x=c(x.1, x.2), lab=c(rep("SD = 1",2000), rep("SD = 3",2000)))
g.var <- ggplot(x.var, aes(x=x, y=..density..))
g.var <- g.var + geom_histogram(color="black", fill="cadetblue")
g.var <- g.var + facet_grid(lab ~ .)
g.var
source('~/Dropbox/Classes - Prof/Stat 201/Materials/Slides/My Slides/images/ch03_plots.R')
source('~/Dropbox/Classes - Prof/Stat 201/Materials/Slides/My Slides/images/ch03_plots.R')
source('~/Dropbox/Classes - Prof/Stat 201/Materials/Slides/My Slides/images/ch03_plots.R')
source('~/Dropbox/Classes - Prof/Stat 201/Materials/Slides/My Slides/images/ch03_plots.R')
source('~/Dropbox/Classes - Prof/Stat 201/Materials/Slides/My Slides/images/ch03_plots.R')
source('~/Dropbox/Classes - Prof/Stat 201/Materials/Slides/My Slides/images/ch03_plots.R')
install.packages("tidyverse")
install.packages("tidyverse")
